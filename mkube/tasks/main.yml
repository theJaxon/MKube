- name: Update all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest

- name: Configure IPv4 forwarding and bridge filters
  ansible.builtin.blockinfile:
    block: |
      overlay 
      br_netfilter
    path: /etc/modules-load.d/k8s.conf
    create: true

- name: Load the overlay and bridge filter modules
  community.general.modprobe:
    name: "{{ item }}"
    state: present
  loop: "{{ kernel_modules }}"

- name: Add required sysctl parameters
  ansible.posix.sysctl:
    name: "{{ item }}"
    value: '1'
    reload: true 
    sysctl_set: true 
    sysctl_file: /etc/sysctl.d/k8s.conf
    state: present
  loop: "{{ kernel_parameters_list }}"

- name: Install selinux prerequisite dependency for ansible module
  ansible.builtin.dnf:
    name: python3-libselinux
    state: present

- name: Disable SELinux
  ansible.posix.selinux:
    state: disabled

- name: Disable firewalld
  ansible.builtin.systemd_service:
    name: firewalld.service
    state: stopped
    enabled: false

- name: Enable kubectl completion and add aliases to .bashrc
  ansible.builtin.blockinfile:
    block: |
      alias k=kubectl
      export do='-o yaml --dry-run=client'
      export KUBECONFIG=~/.kube/conf
      source <(kubectl completion bash | sed 's/kubectl/k/g')
    path: "/home/vagrant/.bashrc"
    
- name: Autoindent in .vimrc 
  ansible.builtin.copy:
    content: set ai et ts=2 shiftwidth=2
    dest: "/home/vagrant/.vimrc" 

- name: Create resolved.conf.d directory
  ansible.builtin.file:
    path: /etc/systemd/resolved.conf.d/
    state: directory
    mode: '0755'

- name: Disable systemd-resolved stub
  ansible.builtin.blockinfile:
    path: /etc/systemd/resolved.conf.d/stub-listener.conf
    create: true
    block: |
      [Resolve]
      DNSStubListener=no
  register: systemd_resolved_file

- name: Restart systemd-resolved service
  ansible.builtin.systemd_service:
    name: systemd-resolved.service
    state: restarted
  when: systemd_resolved_file.changed

- name: Install required packages
  ansible.builtin.dnf:
    name: "{{ packages }}"
    state: present

- set_fact:
    k8s_version: 1.29.12-1

- name: Install kubernetes packages 
  ansible.builtin.dnf:
    name: "{{ item }}-{{ k8s_version }}.fc40"
    state: present
  loop: "{{ k8s_dependencies }}"

- name: Version lock kubernetes packages
  community.general.dnf_versionlock:
    name: "{{ item }}-{{ k8s_version }}*"
    state: present
  loop: "{{ k8s_dependencies }}"

- name: Enable cri-o
  ansible.builtin.systemd_service:
    name: crio
    state: started
    enabled: true

- name: Start and enable Kubelet
  ansible.builtin.systemd_service:
    name: kubelet
    state: started
    enabled: true

- name: Install helm
  ansible.builtin.unarchive:
    src: "https://get.helm.sh/helm-v{{ helm_version }}-linux-arm64.tar.gz"
    dest: /usr/local/bin
    extra_opts: "--strip-components=1"
    owner: root
    group: root
    mode: 0755
    remote_src: true
  args:
    creates: /usr/local/bin/helm

- name: Enable helm auto completion
  ansible.builtin.copy:
    src: helm_completion.sh
    dest: /etc/bash_completion.d/helm

- name: Add machine entries in /etc/hosts 
  ansible.builtin.blockinfile:
    block: |
      192.168.100.10 master master.com 
      192.168.100.11 worker worker.com 
    path: /etc/hosts
